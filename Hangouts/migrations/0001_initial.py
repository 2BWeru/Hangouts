# Generated by Django 4.0.5 on 2022-07-14 09:59

import cloudinary.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Category1',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Site',
            fields=[
                ('title', models.CharField(max_length=100)),
                ('id', models.IntegerField(default=0, primary_key=True, serialize=False)),
                ('text', models.TextField(max_length=1000)),
                ('photo', cloudinary.models.CloudinaryField(blank=True, default='postsite', max_length=255, null=True, verbose_name='postSite')),
                ('date', models.DateField(auto_now_add=True)),
                ('Location', models.CharField(max_length=300)),
                ('url', models.URLField(max_length=1000)),
                ('category1', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Hangouts.category1')),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reviews', models.CharField(max_length=100)),
                ('created', models.DateTimeField(auto_now=True)),
                ('site', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='site', to='Hangouts.site')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('fname', models.CharField(max_length=30)),
                ('bio', models.TextField(max_length=300)),
                ('instagram_acc', models.CharField(max_length=200)),
                ('facebook_acc', models.CharField(max_length=200)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Posts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', cloudinary.models.CloudinaryField(max_length=255, verbose_name='post')),
                ('date', models.DateField(auto_now_add=True)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('title', models.CharField(max_length=100)),
                ('text', models.TextField(max_length=1000)),
                ('id', models.IntegerField(default=0, primary_key=True, serialize=False)),
                ('Location', models.CharField(max_length=300)),
                ('time', models.DateField()),
                ('due_date', models.DateField()),
                ('photo', cloudinary.models.CloudinaryField(blank=True, default='', max_length=255, null=True, verbose_name='image')),
                ('date', models.DateField(auto_now_add=True)),
                ('categories', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='filter', to='Hangouts.category')),
            ],
        ),
    ]
